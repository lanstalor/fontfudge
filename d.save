clear
import fontforge
import os

# Directory with the .OTF files
input_dir = '/path/to/your/fonts'

# Directory with the substitute fonts
substitute_dir = '/path/to/substitute/fonts'

# Directory to save modified fonts
output_dir = os.path.join(input_dir, 'output')

# Ensure output directory exists
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Function to find the closest matching font
def find_closest_font(font, substitute_dir):
    closest_font = None
    closest_font_diff = float('inf')

    for filename in os.listdir(substitute_dir):
        if filename.endswith('.otf'):
            substitute_font_path = os.path.join(substitute_dir, filename)
            substitute_font = fontforge.open(substitute_font_path)

            # Compute the difference in weight and italic properties
            weight_diff = abs(font.os2_weight - substitute_font.os2_weight)
            italic_diff = abs(font.italic - substitute_font.italic)

            # Compute the total difference
            total_diff = weight_diff + italic_diff

            # If this font is closer, update the closest font
            if total_diff < closest_font_diff:
                closest_font = substitute_font
                closest_font_diff = total_diff

    return closest_font

# Iterate over each font in the directory
for filename in os.listdir(input_dir):
    if filename.endswith('.otf'):
        font_path = os.path.join(input_dir, filename)
        font = fontforge.open(font_path)

        # Find the closest matching font
        substitute_font = find_closest_font(font, substitute_dir)

        # Iterate over each glyph in the substitute font
        for glyph in substitute_font.glyphs():
            # If the glyph is not in the font
            if not glyph in font:
                # Add the glyph from the substitute font
                font.selection.select(glyph)
                font.copy()
                font.selection.select(("more", None), glyph)
                font.paste()

        # Save the modified font to the output directory
        new_font_path = os.path.join(output_dir, filename)
        font.generate(new_font_path)

